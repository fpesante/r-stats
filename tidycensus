############# 02 Censo Decenal ###################
#https://youtu.be/P08GXVzt5OY
#install.packages(c("tidycensus","tidyverse","ggspatial","scales","mapdeck"))
library(tidycensus)
library(tidyverse)
library(ggspatial)
library(scales)
library(mapdeck)

#census_api_key(key = "", install = TRUE)
#census_api_key(key = "", overwrite = TRUE) #para computadoras compartidas

setwd("C:/~/repaso-contenido-talleres")

var_censo_2000 <- load_variables(year=2000,
                                 dataset = "sf3")

var_censo_2010 <- load_variables(year=2010,
                                 dataset = "sf1")

viv_oca <- get_decennial(year = 2010,
                         state = "PR",
                         variable = c("H005001","H005006"),
                         geography = "county",
                         sumfile = "sf1",
                         geometry = TRUE,
                         output = "wide") %>% 
  mutate(porc = (H005006/H005001)*100)

mapa_viv_oca <- viv_oca %>% 
  ggplot(aes(fill = porc)) +
  geom_sf() +
  theme_void() +
  scale_fill_gradient(low = "lightblue", high = "darkblue",
                      limits = c(0,100),
                      breaks =c(25,50,75,100),
                      labels = c("0-24","25-49","50-74","75-100")) +
  labs(title = "Mapa: Porciento de viviendas de uso temporal,
       recreacional u ocasoinal en Puerto Rico 2010",
       caption = "Fuente: Censo Decenal 2010, Oficina del Censo de los EE.UU.\n Creado por FPG") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.caption = element_text(hjust = 0.01),
        legend.position = c(0.91,-0.001)) +
  guides(fill=guide_legend(title="Porciento de \n viviendasa")) +
  annotation_north_arrow(location = "tl", style = north_arrow_fancy_orienteering(),
                         height = unit(1.5, "cm"), width = unit(1.5, "cm"),
                         pad_x = unit(0.25, "cm"), pad_y = unit(-.03, "cm"))

mapa_viv_oca
ggsave("C:/~/repaso-contenido-talleres/mapa_vivienda_oca.jpeg", plot= mapa_viv_oca, width = 7, height =3, dpi=300)

var_censo_2020 <- load_variables(year = 2020,
                                 dataset = "pl")

viv_desocup <- get_decennial(year = 2020,
                             state = "PR",
                             variables = c("H1_001N","H1_002N","H1_003N"),
                             geography = "county",
                             sumfile = "pl",
                             output = "wide",
                             geometry = TRUE)
viv_desocup <- viv_desocup %>% 
 mutate(pocp = (H1_002N/H1_001N)*100,
         pdes = (H1_003N/H1_001N)*100)

mapa_viv_desocup <- viv_desocup %>% 
  ggplot(aes(fill=pdes)) +
  geom_sf() +
  theme_void() +
  scale_fill_continuous() +
  scale_fill_gradient(low = "#f2c4ff", high = "#3f064f",
                      limits = c(0,60),
                      breaks = c(15,60,45,60),
                      labels = c("0-15","16-29","30-45","46-60")) +
  labs(ttle = "Mapa: Porciento de viviendas desocupadas en Puerto Rico 2020",
       caption = "Fuente: Censo Decenal 2010, Oficina del Censo de los EE.UU.\n Credo por Francisco Pesante") +
  guides(fill = guide_legend(title = "Porciento de viviendas\n desocupadas")) +
  theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.01)) +
  annotation_north_arrow(location = "tl", style = north_arrow_fancy_orienteering(),
                         height = unit(1.5, "cm"), width = unit(1.5,"cm"),
                         pad_x = unit(0.25, "cm"), pad_y = unit(-0.3, "cm"))

mapa_viv_desocup
ggsave("C:/~/repaso-contenido-talleres/mapa_viv_desocup.jpeg", plot= mapa_viv_oca, width = 7, height =3, dpi=300)
############# 03 Censo Decenal ###################
#https://youtu.be/V8kikRMMP4s
prpob <- tidycensus::get_decennial(geography = "block",
                       state = "PR",
                       #county = "San Juan",
                       year = 2020,
                       variables = "P1_001N",
                       sumfile = "pl",
                       output = "wide",
                       geometry = TRUE)

install.packages("terra")
library(terra) #para activar: as_dot_density
prpob_dots <- tidycensus::as_dot_density(prpob, value = "P1_001N",
                               values_per_dot = 100)
                               #erase_water = TRUE


municipios <- tidycensus::get_decennial(year = 2020,
                            state = "PR",
                            variables = "P1_001N",
                            geography = "county",
                            sumfile = "pl",
                            geometry = TRUE,
                            output = "wide")

library(ggplot2)
mapa_puntos <- ggplot()+
  geom_sf(data = municipios) +
  geom_sf(data= prpob_dots, aes(color = "P1_001N"),
          size = 0.0000000001, show.legend = TRUE) +
  labs(title = "Mapa de Punto de la poblaciÃ³n de Puerto Rico 2020",
       caption = "Fuente de datos: Censo Decenal 2020, Oficina del Censo de los EE.UU.") +
  theme_void() +
  theme(plot.title =element_text(hjust=0.5)) +
  annotation_scale(location ="bl", width_hint = 0.1, plot_unit = "mi",
                   pad_x = unit (5, "cm"), pad_y = unit(-0.0001, "cm")) +
  annotation_north_arrow(location = "tr", style = north_arrow_fancy_orienteering(),
                         height =unit(1.5, "cm"),width = unit(1.5, "cm"),
                         pad_x = unit(0.25, "cm"), pad_y = unit(-0.3,"cm"))

mapa_puntos

ggsave("C:/~/repaso-contenido-talleres/mapa_vivienda_oca.jpeg", plot= mapa_puntos, width = 7, height =3, dpi=300)

############# 01 ACS ###################
#https://youtu.be/CArppu7VfuE
var_acs1_2021 <- load_variables(year = 2021,
                                dataset = "acs1")

acs1 <- get_acs(geography = "county",
                state = "PR",
                county = c("Bayamon","San Juan","Guaynabo","Carolina","Caguas","Trujillo Alto"),
                year = 2010,
                survey = "acs1",
                variables = "B25058_001", #mediana de renta
                output = "wide",
                geometry = TRUE) %>% 
  mutate(NAME = str_remove(NAME, "Municipio, Puerto Rico"))

acs1_2 <- get_acs(geography = "county",
                state = "PR",
                county = c("Bayamon","San Juan","Guaynabo","Carolina","Caguas","Trujillo Alto"),
                year = 2021,
                survey = "acs1",
                variables = "B25058_001", #mediana de renta
                output = "wide",
                geometry = FALSE) %>% 
  mutate(NAME = str_remove(NAME, "Municipio, Puerto Rico"))

acs1_3 <- merge(x = acs1, y = acs1_2, by = c("NAME","GEOID")) %>% 
  mutate(cambio = ((B25058_001E.y - B25058_001E.x)/B25058_001E.x)*100,
         cambio1 = ((B25058_001E.y - B25058_001E.x)/B25058_001E.x))

acs1_mapa <- acs1_3 %>% ggplot(aes(fill = cambio1)) +
  geom_sf() +
  theme_void() +
  scale_fill_viridis_c(labels = scales::percent) +
  labs(title = "Mediana de renta por municipio 2017-2021") +
  guides(fill = guide_legend(title = "Mediana de renta"))

acs1_mapa
ggsave("C:/~/repaso-contenido-talleres/renta.jpeg", plot = acs1_mapa, width = 7, height =3, dpi=300)

############# 02 ACS ###################
#https://youtu.be/CDyrVSRH6X4
acs1_graf <- acs1_3 %>% 
  ggplot(aes(x = NAME, weight = cambio)) +
  geom_bar(fill = "#590b59") +
  labs(title = "Cambio porcentual de la mediana de renta por municipio entre 2019 y 2021",
       x = "Municipio",
       y = "Porciento") +
  geom_text(aes(label = scales::comma(after_stat(count))), stat = "count", vjust = 1.1, colour = "white") +
  theme_minimal()
acs1_graf
ggsave("C:/~/repaso-contenido-talleres/graf_cambio_renta.jpeg", plot = acs1_graf, width = 10, height =5, dpi=300)

############# 03 ACS ###################
#https://youtu.be/beoBe6UBux4
library(ggplot2)
library(tidycensus)
adjuntas_emigracion_interna <- get_flows(geography = "county",
                                         state = "PR",
                                         county = "adjuntas",
                                         year = 2020,
                                         geometry = TRUE) %>% 
  filter(variable == "MOVEDOUT" & estimate >=1 & str_detect(GEOID2, "^72")) %>% 
  arrange(desc(estimate))
adj_em_in <- sum(adjuntas_emigracion_interna$estimate)

adjuntas_inmigracion_interna <- get_flows(geography = "county",
                                          state = "PR",
                                          county = "adjuntas",
                                          year = 2020,
                                          geometry = TRUE) %>% 
  filter(variable == "MOVEDIN" & estimate >=1 & str_detect(GEOID1, "^72")) %>% 
  na.omit() %>% 
  arrange(desc(estimate)) %>% 
  slice_max(estimate, n = 5)
adj_in_in <- sum(adjuntas_inmigracion_interna$estimate)

adjuntas_emigracion_externa <- get_flows(geography = "county",
                                         state = "PR",
                                         county = "adjuntas",
                                         year = 2020,
                                         geometry = TRUE) %>% 
  filter(variable == "MOVEDOUT" & estimate >=1 & GEOID2 < 72005) %>% 
  na.omit() %>% 
  arrange(desc(estimate)) 
adj_em_ex <- sum(adjuntas_emigracion_externa$estimate)
  

adjuntas_inmigracion_externa <- get_flows(geography = "county",
                                         state = "PR",
                                         county = "adjuntas",
                                         year = 2020,
                                         geometry = TRUE) %>% 
  filter(variable == "MOVEDIN" & estimate >=1 & GEOID2 < 72005) %>% 
  na.omit() %>% 
  arrange(desc(estimate)) 
adj_in_ex <- sum(adjuntas_inmigracion_externa$estimate)

#Visualizacion de 
library(dplyr)
library(mapdeck)
token <- "API KEY HERE"


adjuntas_emigracion_interna %>% 
  mapdeck( #pitch = 45,
    token = token) %>% 
  add_arc(origin = "centroid1",
          destination = "centroid2",
          stroke_width = "width")
  
adjuntas_emigracion_externa %>% 
  mapdeck( #pitch = 45,
    token = token) %>% 
  add_arc(origin = "centroid1",
          destination = "centroid2",
          stroke_width = "width")

adjuntas_inmigracion_interna %>% 
  mapdeck( #pitch = 45,
    token = token) %>% 
  add_arc(origin = "centroid1",
          destination = "centroid2",
          stroke_width = "width")

adjuntas_inmigracion_externa  %>% 
  mapdeck( #pitch = 45,
    token = token) %>% 
  add_arc(origin = "centroid1",
          destination = "centroid2",
          stroke_width = "width")

############# 02 ACS PUMS ###################
#https://youtu.be/ppIuXT8Hr_g
library(tidycensus)
library(tidyverse)
library(scales)

pums_vars_2021 <- pums_variables %>% 
  filter(year == 2021, survey == "acs5", level == "person")

#pums_vars <- c("DEYE","AGEP","SEX","SCHL","MAR","DDRS",
#              "PINCP","OCCP","COM","WAGP","POVPIP",
#              "PWGTP","INDP","PUMA","HICOV","NWAV","JWTRNS")

pums_vars <- c("DEYE","AGEP","SEX","SCHL","MAR","DDRS",
               "PINCP","OCCP","WAGP","POVPIP",
               "PWGTP","INDP","HICOV","NWAV","JWTRNS")
#se omite "COM" y "PUMA"

view(pums_vars)
 
pums_FL <- get_pums(state = "FL",
                    year = 2021,
                    survey = "acs5",
                    variables = pums_vars)
library(readr)
pums <- read_csv("C:/~/repaso-contenido-talleres/psam_p72.csv") %>% 
  select(pums_vars) %>% 
  filter(DEYE == 1)

str(pums)

pums$SEX <- factor(pums$SEX,
                   levels = 1:2, labels = c("Hombre","Mujer"))

pums$SCHL <- as.numeric(pums$SCHL)
pums <- pums %>% mutate(SCHL_r = case_when(SCHL == 1 ~ "No completo la escuela",
                                           SCHL >= 2 & SCHL <= 14 ~ "No ha completado la escuela",
                                           SCHL == 15 ~ "Cuarto ano sin diploma",
                                           SCHL >= 16 & SCHL <= 17 ~ "Escuela Superior o Equivalente",
                                           SCHL >= 18 & SCHL <= 19 ~ "Alguna educacion superior",
                                           SCHL == 20 ~ "Grado asociado",
                                           SCHL == 21 ~ "Bachillerato",
                                           SCHL == 22 ~ "Maestria",
                                           SCHL == 23 ~ "Grado profesional",
                                           SCHL == 24 ~ "Doctorado"))

pums$MAR <- factor(pums$MAR,
                   levels = 1:5, labels = c("Casado",
                                            "Viudo",
                                            "Divorciado",
                                            "Separado",
                                            "Nunca casado"))
                                           
pums <- pums %>% mutate(grupoedad = case_when(
  AGEP >= 0 & AGEP <= 9 ~ "09 AÃ±os o menos",
  AGEP >= 10 & AGEP <= 19 ~ "10 a 19 aÃ±os",
  AGEP >= 20 & AGEP <= 29 ~ "20 a 29 aÃ±os", 
  AGEP >= 30 & AGEP <= 39 ~ "30 a 39 aÃ±os",
  AGEP >= 40 & AGEP <= 49 ~ "40 a 49 aÃ±os",
  AGEP >= 50 & AGEP <= 59 ~ "50 a 59 aÃ±os",
  AGEP >= 60 & AGEP <= 69 ~ "60 a 69 aÃ±os",
  AGEP >= 70 & AGEP <= 79 ~ "70 a 79 aÃ±os",
  AGEP >= 80 ~ "80 aÃ±os o mas"))

pums$DDRS <- factor(pums$DDRS,
                    levels = 1:2, labels = c("si","no"))
                                      
#Salario        
pums <- pums %>% mutate(WAGP_R = case_when(
  WAGP <= 9999 ~ "9,999 dolares o menos",
  WAGP >= 10000 & WAGP <= 19999 ~ "$10,000 a 19,000",
  WAGP >= 20000 & WAGP <= 29999 ~ "$20,000 a 29,000", 
  WAGP >= 30000 & WAGP <= 39999 ~ "$30,000 a 39,000",
  WAGP >= 40000 & WAGP <= 49999 ~ "$40,0000 a 49,000",
  WAGP >= 50000 & WAGP <= 59999 ~ "$50,000 a 59,000",
  WAGP >= 60000 ~ "$60,000 o mas"))

#Ingreso
pums <- pums %>% mutate(PINCP_R = case_when(
  WAGP <= 9999 ~ "9,999 dolares o menos",
  WAGP >= 10000 & WAGP <= 19999 ~ "$10,000 a 19,000",
  WAGP >= 20000 & WAGP <= 29999 ~ "$20,000 a 29,000", 
  WAGP >= 30000 & WAGP <= 39999 ~ "$30,000 a 39,000",
  WAGP >= 40000 & WAGP <= 49999 ~ "$40,0000 a 49,000",
  WAGP >= 50000 & WAGP <= 59999 ~ "$50,000 a 59,000",
  WAGP >= 60000 ~ "$60,000 o mas"))

pums$HICOV <- factor(pums$HICOV,
                     levels = 1:2, labels = c("Con cobertura medica",
                                              "Sin cobertura medica"))

# Analisis
install.packages(c("epiDisplay","expss","sjPlot"))
library(epiDisplay)
library(expss)
library(sjPlot)

mean(pums$AGEP)
median(pums$AGEP)
fre(pums$grupoedad,
    weight = pums$PWGTP,
    drop_unused_labels = TRUE,
    prepend_var_lab = FALSE,
    stat_lab = getOption("expss.fre_stat_lab", c("Frecuencia","Valid percent","Percent",
                                                 "Responses %","Cummulatives responses %")))

#pums %>% 
#  ggplot(aes(x = grupoedad, weight = PWGTP)) +
#  geom_bar(show.legend = FALSE, fill = "#112446") +
#  labs(
#    x = "Sexo",
#    y = "Numero de personas con dificultad visual",
#    title = "Grafica: Numero de personas con dificultad visual",
#    caption = "Fuente: PRCS 2015-2019") +
#  scale_y_continuous(labels = scales::comma) +
#  guides(fill = guide_legend(title = "Sexo")) +
#  geom_text(aes(label = scales::comma(..count..)), stat = "count", vjust = 1.5, colour = "white") +
#  theme_minimal()

#Warning message:
#The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.
#â¹ Please use `after_stat(count)` instead.

pums %>% 
  ggplot(aes(x = grupoedad, weight = PWGTP)) +
  geom_bar(show.legend = FALSE, fill = "#112446") +
  labs(
    x = "Sexo",
    y = "Numero de personas con dificultad visual",
    title = "Grafica: Numero de personas con dificultad visual",
    caption = "Fuente: PRCS 2015-2019") +
  scale_y_continuous(labels = scales::comma) +
  guides(fill = guide_legend(title = "Sexo")) +
  geom_text(aes(label = after_stat(count)), stat = "count", vjust = 1.5, colour = "white") +
  theme_minimal()
  
#Sexo
fre(pums$SEX,
    weight = pums$PWGTP,
    drop_unused_labels = TRUE,
    prepend_var_lab = FALSE,
    stat_lab = getOption("expss.fre_stat_lab", c("Frecuencia","Valid percent", "Percent",
                                                 "Response %","Cummulatives responses %")))

pums %>% 
  ggplot(aes(x=SEX,weight = PWGTP)) +
  geom_bar(show.legend = FALSE, fill = "#112446") +
  labs(
    x = "Sexo",
    y = "Numero de personas con dificultad visual",
    title = "Grafica: Numero de persona con dificultad visual por sexo 2017-2021",
    caption = "Fuente: PRCS 2017-2021") +
  scale_y_continuous(labels = scales::comma, breaks = c(10000,20000,
                                                        30000,40000,
                                                        50000,60000,
                                                        70000,80000,
                                                        90000,100000,
                                                        110000,120000,
                                                        130000)) +
  guides(fill =  guide_legend(title = "Sexo")) +
  geom_text(aes(label = ..count..), stat = "count", vjust = 1.5, colour = "white") + theme_minimal()

pums %>% 
  ggplot(aes(x = SEX, weight = PWGTP)) +
  geom_bar(aes(y = (..count..)/sum(..count..)),show.legend = FALSE, fill = "#112446") +
  geom_text(aes(label = scales::percent((..count..)/sum(..count..), accuracy = 0.01),
                y = (..count..)/sum(..count..)), stat ="count", vjust = 1.5, colour = "white") +
  labs(
    x = "Sexo",
    y = "Porciento de personas con dificultad visual",
    title = "Grafica: Porciento de persona con dificultad visual por sexo 2017-2021",
    caption = "Fuente: PRCS 2017-2021") +
scale_y_continuous(labels = scales::percent) +
  theme_minimal()


#Crosstabs
sjPlot::tab_xtab(var.row = pums$PINCP_R,
                 var.col = pums$SEX,
                 title = "Ingreso de personas con dificultad visual por sexo 2017-2021",
                 var.labels = c("Ingreso","Sexo"),
                 show.row.prc = TRUE,
                 show.col.prc = TRUE,
                 show.summary = FALSE,
                 show.na = FALSE,
                 encoding = "UTF-8",
                 weight.by = pums$PWGTP)

sjPlot::tab_xtab(var.row = pums$PINCP_R,
                 var.col = pums$HICOV,
                 title = "Ingreso de personas con dificultad visual por cubierta de salud 2017-2021",
                 var.labels = c("Ingreso","Cubierta"),
                 show.row.prc = TRUE,
                 show.col.prc = TRUE,
                 show.summary = FALSE,
                 show.na = FALSE,
                 encoding = "UTF-8",
                 weight.by = pums$PWGTP)

sjPlot::tab_xtab(var.row = pums$SEX,
                 var.col = pums$DDRS,
                 title = "Sexo de personas con dificultad visual por capacidad de autocuidado 2017-2021",
                 var.labels = c("Sexo","Autocuidado"),
                 show.row.prc = TRUE,
                 show.col.prc = TRUE,
                 show.summary = FALSE,
                 show.na = FALSE,
                 encoding = "UTF-8",
                 weight.by = pums$PWGTP)


DDRS
## Regresion
model <- lm(WAGP ~ SCHL_r, data = pums)
summary(model)
############# 01 estimados ###################
#https://youtu.be/3TLIGuqmduM
library(tidycensus)
library(tidyverse)
library(scales)

estm <- get_estimates(geography = "state",
                      product = "population",
                      state = "PR",
                      year = 2019)

estm0 <- get_estimates(geography = "state",
                      product = "components",
                      state = "PR",
                      year = 2019)

estm00 <- get_estimates(geography = "state",
                       product = "housing",
                       state = "PR",
                       year = 2019)

estm1 <- get_estimates(geography = "state",
                      product = "characteristics",
                      breakdown = c("SEX","AGEGROUP"),
                      breakdown_labels = TRUE,
                       state = "PR",
                       year = 2019)

#Filtrar datos
estm1 <- estm1 %>% filter(str_detect(AGEGROUP, "^Age"), SEX != "Both sexes") %>% 
   mutate(value = ifelse(SEX == "Male", -value, value))

#Reemplazar palabras en ingles
estm1$AGEGROUP <- gsub("to", "a", estm1$AGEGROUP)
estm1$AGEGROUP <- gsub("and", "o", estm1$AGEGROUP)
estm1$AGEGROUP <- gsub("older","mas", estm1$AGEGROUP)
estm1$AGEGROUP <- gsub("Age","",estm1$AGEGROUP)
estm1$AGEGROUP <- gsub("years","aÃ±os",estm1$AGEGROUP)
estm1$AGEGROUP <- gsub("0 a 4 aÃ±os","00 a 04 aÃ±os",estm1$AGEGROUP)
estm1$AGEGROUP <- gsub("5 a 9 aÃ±os","05 a 09 aÃ±os",estm1$AGEGROUP)
estm1$SEX <- gsub("Male","Hombre", estm1$SEX)
estm1$SEX <- gsub("Female","Mujer", estm1$SEX)
  
Piramide <- estm1 %>% ggplot(aes(x = AGEGROUP, y = value, fill = SEX)) +
  geom_bar(stat = "identity", width = 1) +
  theme_minimal() +
  scale_y_continuous(labels = function(y) paste0(abs(y/1000), "k")) +
  scale_fill_manual(values = c("navy","darkred")) +
  coord_flip() +
  labs(x = "",
       y = "Numero de personas en miles",
       title = "Piramide poblacional 2019",
       subtitle = "Puerto Rico",
       fill = "",
       caption = "Fuente de datos: Estimados de poblacion de la Oficina del Censo de EE.UU.")
Piramide
ggsave("C:/~/repaso-contenido-talleres/piramide_poblacion_pr.jpeg")
